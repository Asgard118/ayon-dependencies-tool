# Build AYON dependencies docker image
FROM centos:7 AS builder
ARG PYTHON_VERSION=3.9.13
ARG BUILD_DATE
ARG VERSION

LABEL description="Docker Image to create dependency package for Centos 7 installer"
LABEL org.opencontainers.image.name="ynput/ayon-dependencies-centos7"
LABEL org.opencontainers.image.title="AYON Dependency Package Docker Image"
LABEL org.opencontainers.image.url="https://ayon.ynput.io/"
LABEL org.opencontainers.image.source="https://github.com/ynput/ayon-dependencies-tool"
LABEL org.opencontainers.image.documentation="https://ayon.ynput.io"
LABEL org.opencontainers.image.created=$BUILD_DATE
LABEL org.opencontainers.image.version=$VERSION


USER root

# update base
RUN yum -y install deltarpm \
    && yum -y update \
    && yum clean all

# add tools we need
RUN yum -y install https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm \
    && yum -y install centos-release-scl \
    && yum -y install \
        bash \
        which \
        git \
        make \
        devtoolset-7 \
        cmake \
        curl \
        wget \
        gcc \
        zlib-devel \
        pcre-devel \
        perl-core \
        bzip2 \
        bzip2-devel \
        readline-devel \
        sqlite sqlite-devel \
        openssl-devel \
        openssl-libs \
        openssl11-devel \
        openssl11-libs \
        tk-devel libffi-devel \
        patchelf \
        automake \
        autoconf \
        patch \
        ncurses \
	    ncurses-devel \
        qt5-qtbase-devel \
        xcb-util-wm \
        xcb-util-renderutil \
    && yum clean all

# we need to build our own patchelf
WORKDIR /temp-patchelf
RUN git clone -b 0.17.0 --single-branch https://github.com/NixOS/patchelf.git . \
    && source scl_source enable devtoolset-7 \
    && ./bootstrap.sh \
    && ./configure \
    && make \
    && make install

RUN mkdir /opt/ayon-dependencies-tool

RUN curl https://pyenv.run | bash
# ENV PYTHON_CONFIGURE_OPTS --enable-shared

RUN echo 'export PATH="$HOME/.pyenv/bin:$PATH"'>> $HOME/.bashrc \
    && echo 'eval "$(pyenv init -)"' >> $HOME/.bashrc \
    && echo 'eval "$(pyenv virtualenv-init -)"' >> $HOME/.bashrc \
    && echo 'eval "$(pyenv init --path)"' >> $HOME/.bashrc

RUN source $HOME/.bashrc \
    && export CPPFLAGS="-I/usr/include/openssl11" \
    && export LDFLAGS="-L/usr/lib64/openssl11 -lssl -lcrypto" \
    && export PATH=/usr/local/openssl/bin:$PATH \
    && export LD_LIBRARY_PATH=/usr/local/openssl/lib:$LD_LIBRARY_PATH \
    && pyenv install ${PYTHON_VERSION}

COPY . /opt/ayon-dependencies-tool/
RUN rm -rf /opt/ayon-dependencies-tool/.poetry || echo "No Poetry installed yet."
RUN chmod +x /opt/ayon-dependencies-tool/start.sh

# USER ayon

WORKDIR /opt/ayon-dependencies-tool

RUN source $HOME/.bashrc \
    && pyenv local ${PYTHON_VERSION}

RUN source $HOME/.bashrc \
    && ./start.sh install

CMD [/opt/ayon-dependencies-tool/start.sh, listen]
